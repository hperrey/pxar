################################################
#                 WARNING!                     #
# This file has been auto-generated by xdress. #
# Do not modify!!!                             #
#                                              #
#                                              #
#                    Come on, guys. I mean it! #
################################################


cimport xdress_extra_types
from libcpp.map cimport map as cpp_map
from libcpp.string cimport string as std_string
from libcpp.utility cimport pair as cpp_pair
from libcpp.vector cimport vector as cpp_vector
from pyPxarCore cimport c_api

cdef extern from "api.h" namespace "pxar":

    cdef struct pixel:
        # constructors
        pixel() except -1
        pixel(int, int) except -1

        # attributes
        xdress_extra_types.uchar column
        xdress_extra_types.uchar roc_id
        xdress_extra_types.uchar row
        int value

        # methods
        void decode(int) 
        pass



cdef extern from "api.h" namespace "pxar":

    cdef struct tbmConfig:
        # constructors
        tbmConfig() except -1

        # attributes
        cpp_map[xdress_extra_types.uchar, xdress_extra_types.uchar] dacs
        bint enable
        xdress_extra_types.uchar type

        # methods

        pass



cdef extern from "api.h" namespace "pxar":

    cdef struct rocConfig:
        # constructors
        rocConfig() except -1

        # attributes
        cpp_map[xdress_extra_types.uchar, xdress_extra_types.uchar] dacs
        bint enable
        cpp_vector[pixelConfig] pixels
        xdress_extra_types.uchar type

        # methods

        pass



cdef extern from "api.h" namespace "pxar":

    cdef struct pixelConfig:
        # constructors
        pixelConfig() except -1
        pixelConfig(xdress_extra_types.uchar, xdress_extra_types.uchar, xdress_extra_types.uchar) except -1

        # attributes
        xdress_extra_types.uchar column
        bint enable
        bint mask
        xdress_extra_types.uchar row
        xdress_extra_types.uchar trim

        # methods

        pass



cdef extern from "api.h" namespace "pxar":

    cdef struct dut:
        # constructors
        dut() except -1

        # attributes


        # methods
        bint getAllPixelEnable() 
        xdress_extra_types.uchar getDAC(xdress_extra_types.uint64, std_string) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, xdress_extra_types.uchar]] getDACs(xdress_extra_types.uint64) 
        cpp_vector[pixelConfig] getEnabledPixels(xdress_extra_types.uint64) 
        cpp_vector[rocConfig] getEnabledRocs() 
        cpp_vector[tbmConfig] getEnabledTbms() 
        bint getModuleEnable() 
        int getNEnabledPixels(xdress_extra_types.uchar) except -1
        int getNEnabledRocs() except -1
        int getNEnabledTbms() except -1
        int getNMaskedPixels(xdress_extra_types.uchar) except -1
        pixelConfig getPixelConfig(xdress_extra_types.uint64, xdress_extra_types.uchar, xdress_extra_types.uchar) 
        bint getPixelEnabled(xdress_extra_types.uchar, xdress_extra_types.uchar) 
        void info() 
        void maskAllPixels(bint) 
        void maskAllPixels(bint, xdress_extra_types.uchar) 
        void maskColumn(xdress_extra_types.uchar, bint) 
        void maskColumn(xdress_extra_types.uchar, bint, xdress_extra_types.uchar) 
        void maskPixel(xdress_extra_types.uchar, xdress_extra_types.uchar, bint) 
        void maskPixel(xdress_extra_types.uchar, xdress_extra_types.uchar, bint, xdress_extra_types.uchar) 
        void printDACs(xdress_extra_types.uint64) 
        void setROCEnable(xdress_extra_types.uint64, bint) 
        void setTBMEnable(xdress_extra_types.uint64, bint) 
        bint status() 
        void testAllPixels(bint) 
        void testAllPixels(bint, xdress_extra_types.uchar) 
        void testPixel(xdress_extra_types.uchar, xdress_extra_types.uchar, bint) 
        void testPixel(xdress_extra_types.uchar, xdress_extra_types.uchar, bint, xdress_extra_types.uchar) 
        pass



cdef extern from "api.h" namespace "pxar":

    cdef struct api:
        # constructors
        api() except -1
        api(std_string) except -1
        api(std_string, std_string) except -1

        # attributes


        # methods
        void HVoff() 
        void HVon() 
        void Poff() 
        void Pon() 
        bint SignalProbe(std_string, std_string) 
        cpp_vector[xdress_extra_types.uint16] daqGetBuffer() 
        cpp_vector[pixel] daqGetEvent() 
        bint daqStart(cpp_vector[cpp_pair[xdress_extra_types.uint16, xdress_extra_types.uchar]]) 
        bint daqStop() 
        void daqTrigger() 
        void daqTrigger(xdress_extra_types.uint32) 
        void daqTriggerLoop() 
        void daqTriggerLoop(xdress_extra_types.uint16) 
        bint flashTB(std_string) 
        cpp_vector[pixel] getEfficiencyMap() 
        cpp_vector[pixel] getEfficiencyMap(xdress_extra_types.uint16) 
        cpp_vector[pixel] getEfficiencyMap(xdress_extra_types.uint16, xdress_extra_types.uint32) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getEfficiencyVsDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getEfficiencyVsDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, xdress_extra_types.uint16) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getEfficiencyVsDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, xdress_extra_types.uint16, xdress_extra_types.uint32) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getEfficiencyVsDACDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, std_string, xdress_extra_types.uchar, xdress_extra_types.uchar) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getEfficiencyVsDACDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, xdress_extra_types.uint16) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getEfficiencyVsDACDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, xdress_extra_types.uint16, xdress_extra_types.uint32) 
        cpp_vector[pixel] getPulseheightMap() 
        cpp_vector[pixel] getPulseheightMap(xdress_extra_types.uint16) 
        cpp_vector[pixel] getPulseheightMap(xdress_extra_types.uint16, xdress_extra_types.uint32) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getPulseheightVsDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getPulseheightVsDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, xdress_extra_types.uint16) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getPulseheightVsDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, xdress_extra_types.uint16, xdress_extra_types.uint32) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getPulseheightVsDACDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, std_string, xdress_extra_types.uchar, xdress_extra_types.uchar) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getPulseheightVsDACDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, xdress_extra_types.uint16) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getPulseheightVsDACDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, xdress_extra_types.uint16, xdress_extra_types.uint32) 
        int getReadbackValue(std_string) except -1
        double getTBia() except -1
        double getTBid() except -1
        double getTBva() except -1
        double getTBvd() except -1
        cpp_vector[pixel] getThresholdMap(std_string) 
        cpp_vector[pixel] getThresholdMap(std_string, xdress_extra_types.uint16) 
        cpp_vector[pixel] getThresholdMap(std_string, xdress_extra_types.uint16, xdress_extra_types.uint32) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getThresholdVsDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getThresholdVsDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, xdress_extra_types.uint16) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getThresholdVsDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, xdress_extra_types.uint16, xdress_extra_types.uint32) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getThresholdVsDACDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, std_string, xdress_extra_types.uchar, xdress_extra_types.uchar) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getThresholdVsDACDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, xdress_extra_types.uint16) 
        cpp_vector[cpp_pair[xdress_extra_types.uchar, 0]] getThresholdVsDACDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, std_string, xdress_extra_types.uchar, xdress_extra_types.uchar, xdress_extra_types.uint16, xdress_extra_types.uint32) 
        std_string getVersion() 
        bint initDUT(std_string, cpp_vector[cpp_vector[cpp_pair[0, 0]]], std_string, cpp_vector[cpp_vector[cpp_pair[0, 0]]], cpp_vector[cpp_vector[pixelConfig]]) 
        bint initTestboard(cpp_vector[cpp_pair[0, 0]], cpp_vector[cpp_pair[0, 0]], cpp_vector[cpp_pair[xdress_extra_types.uint16, xdress_extra_types.uchar]]) 
        bint programDUT() 
        bint setDAC(std_string, xdress_extra_types.uchar) 
        bint setDAC(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar) 
        bint setTbmReg(std_string, xdress_extra_types.uchar) 
        bint setTbmReg(std_string, xdress_extra_types.uchar, xdress_extra_types.uchar) 
        bint status() 
        pass




